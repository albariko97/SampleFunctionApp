name: Build and Publish Azure Function App

on: 
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    env:
      AZURE_BLOB_URL: "https://edgechwebapps.blob.core.windows.net/dev1"
      FUNCTION_APP_PACKAGE: "SampleFunctionApp.zip"
      AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'  # path to the function app project
      DOTNET_VERSION: '8.0.x'

    steps:
    # 1. Checkout Code
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    # 2. Setup .NET Environment
    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # 3. Build the Application
    - name: 'Build Function App'
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet publish --configuration Release --output ./output
        popd

    # Step 4: Create a zip package of the build artifacts
    - name: Create ZIP Package
      run: |
        cd ./output
        zip -r ../${{ env.FUNCTION_APP_PACKAGE }} ./*
        cd ..

    # Step 5: Verify the ZIP file
    - name: Verify ZIP File
      run: |
        ls -lh ${{ env.FUNCTION_APP_PACKAGE }}

    # Step 6: Upload the ZIP file to Azure Blob Storage
    - name: Upload to Azure Blob Storage
      run: |
        curl -X PUT "${{ env.AZURE_BLOB_URL }}?${{ secrets.SAS_TOKEN }}" \
             --upload-file "./${{ env.FUNCTION_APP_PACKAGE }}"


    # # 6. Notify Webhook (Optional)
    # - name: Notify Webhook
    #   run: |
    #     curl -X POST "https://<YourWebhookUrl>" \
    #          -H "Content-Type: application/json" \
    #          -d '{
    #                "artifactName": "${{ env.FUNCTION_APP_PACKAGE }}",
    #                "artifactPath": "${{ env.AZURE_BLOB_URL }}/${{ env.FUNCTION_APP_PACKAGE }}?${{ secrets.SAS_TOKEN }}"
    #              }'
