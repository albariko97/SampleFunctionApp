name: Build and Publish Azure Function App

on: 
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    env:
      AZURE_BLOB_URL: "https://edgechwebapps.blob.core.windows.net/dev1"
      FUNCTION_APP_PACKAGE: "SampleFunctionApp.zip"
      AZURE_FUNCTIONAPP_NAME: 'SampleFunctionApp'   # set this to your function app name on Azure
      AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
      DOTNET_VERSION: '8.0.x'

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
        
    # 4. Upload to Azure Blob Storage using SAS URL
    - name: Upload to Azure Blob Storage
      run: |
        curl -X PUT "${{ env.AZURE_BLOB_URL }}/${{ env.FUNCTION_APP_PACKAGE }}?${{ secrets.SAS_TOKEN }}" \
             --upload-file ./publish/carrierapp.zip
    # # 5. Notify Webhook (Optional)
    # - name: Notify Webhook
    #   run: |
    #     curl -X POST "https://<YourWebhookUrl>" \
    #          -H "Content-Type: application/json" \
    #          -d '{
    #                "artifactName": "${{ env.FUNCTION_APP_PACKAGE }}",
    #                "artifactPath": "${{ env.AZURE_BLOB_URL }}/${{ env.FUNCTION_APP_PACKAGE }}?${{ secrets.SAS_TOKEN }}"
    #              }'
